[{"D:\\code\\personal-projects\\blog-cms\\src\\index.js":"1","D:\\code\\personal-projects\\blog-cms\\src\\App.js":"2","D:\\code\\personal-projects\\blog-cms\\src\\reportWebVitals.js":"3","D:\\code\\personal-projects\\blog-cms\\src\\pages\\PostCreator\\index.js":"4","D:\\code\\personal-projects\\blog-cms\\src\\components\\BlogPostSection\\index.js":"5","D:\\code\\personal-projects\\blog-cms\\src\\pages\\BlogPost\\index.js":"6","D:\\code\\personal-projects\\blog-cms\\src\\components\\BlogPostImage\\index.js":"7","D:\\code\\personal-projects\\blog-cms\\src\\components\\BlogPostTitle\\index.js":"8","D:\\code\\personal-projects\\blog-cms\\src\\components\\PostCreationComponents\\CreatorToolBox\\index.js":"9","D:\\code\\personal-projects\\blog-cms\\src\\components\\PostCreationComponents\\BlogPostTitle\\index.js":"10","D:\\code\\personal-projects\\blog-cms\\src\\components\\PostCreationComponents\\BlogPostImage\\index.js":"11","D:\\code\\personal-projects\\blog-cms\\src\\components\\PostCreationComponents\\BlogPostSection\\index.js":"12","D:\\code\\personal-projects\\blog-cms\\src\\components\\PostCreationComponents\\SectionOptions\\index.js":"13","D:\\code\\personal-projects\\blog-cms\\src\\utils\\API.js":"14"},{"size":500,"mtime":499162500000,"results":"15","hashOfConfig":"16"},{"size":895,"mtime":1610169020138,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":6063,"mtime":1610172723908,"results":"19","hashOfConfig":"16"},{"size":252,"mtime":1609903535586,"results":"20","hashOfConfig":"16"},{"size":3200,"mtime":1609905075892,"results":"21","hashOfConfig":"16"},{"size":195,"mtime":1609904844283,"results":"22","hashOfConfig":"16"},{"size":257,"mtime":1609904244862,"results":"23","hashOfConfig":"16"},{"size":699,"mtime":1610169517265,"results":"24","hashOfConfig":"16"},{"size":1040,"mtime":1610098087501,"results":"25","hashOfConfig":"16"},{"size":562,"mtime":1610098103799,"results":"26","hashOfConfig":"16"},{"size":899,"mtime":1610098169598,"results":"27","hashOfConfig":"16"},{"size":802,"mtime":1610098005249,"results":"28","hashOfConfig":"16"},{"size":415,"mtime":1610169972783,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"fpreo9",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"32"},"D:\\code\\personal-projects\\blog-cms\\src\\index.js",[],["63","64"],"D:\\code\\personal-projects\\blog-cms\\src\\App.js",["65"],"import logo from './logo.svg';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport './App.css';\nimport PostCreator from './pages/PostCreator'\nimport BlogPost from './pages/BlogPost'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router >\n        <Switch>\n          <Route exact path='/'>\n\n          </Route>\n          <Route exact path='/login'>\n\n          </Route>\n          {/* <Route exact path='/dashboard/:user'>\n\n          </Route> */}\n          <Route exact path='/user/:userId/post/create'>\n            <PostCreator isNewPost={true} />\n          </Route>\n          <Route exact path='/user/:userId/post/update/:postId'>\n            <PostCreator isNewPost={false} />\n          </Route>\n          <Route exact path='/post/:id'>\n            <BlogPost />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\code\\personal-projects\\blog-cms\\src\\reportWebVitals.js",[],"D:\\code\\personal-projects\\blog-cms\\src\\pages\\PostCreator\\index.js",["66","67","68","69"],"import React, { useState, useRef, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport API from '../../utils/API'\r\nimport CreatorToolBox from '../../components/PostCreationComponents/CreatorToolBox'\r\nimport BlogPostTitle from '../../components/PostCreationComponents/BlogPostTitle'\r\nimport BlogPostImage from '../../components/PostCreationComponents/BlogPostImage'\r\nimport BlogPostSection from '../../components/PostCreationComponents/BlogPostSection'\r\nimport './index.css'\r\n\r\nexport default function PostCreator(props) {\r\n    const { userId, postId } = useParams();\r\n\r\n    const [components, setComponentsState] = useState([])\r\n    const componentsRef = useRef([])\r\n    const setComponents = data => {\r\n        componentsRef.current = data\r\n        setComponentsState(data)\r\n    }\r\n\r\n    useEffect(() => {\r\n        // if user is creating a brand new blog post, add title to sections state\r\n        if (props.isNewPost) {\r\n            const titleObj = {\r\n                sectionType: 'title',\r\n                title: 'Blog Post Title',\r\n                subtitle: 'Insert subtitle here'\r\n            }\r\n    \r\n            setComponents([...componentsRef.current, titleObj])\r\n        } else {\r\n            // else id of post is in url, use it and make call to server for blog post data\r\n            API.getBlogPost(postId).then(post => {\r\n                setComponents(post.data.postSections)\r\n            })\r\n        }\r\n    }, [])\r\n\r\n    const addSection = () => {\r\n        // add object to state with properties for a section with a heading and text\r\n        const sectionObj = {\r\n            sectionType: 'subSection',\r\n            heading: 'Heading',\r\n            text: 'This is the body text for this section'\r\n        }\r\n\r\n        setComponents([...componentsRef.current, sectionObj])\r\n    }\r\n\r\n    const addImage = () => {\r\n        // add object to state with info for image section\r\n        const imgObj = {\r\n            sectionType: 'image',\r\n            url: '',\r\n            alt: '',\r\n        }\r\n\r\n        setComponents([...componentsRef.current, imgObj])\r\n    }\r\n\r\n    const handleSectionMove = (index, direction) => {\r\n        const newSections = [...componentsRef.current]\r\n\r\n        // set integer value to direction to indicate index increase/decrease in state array\r\n        const moveAmount = direction === 'up' ? -1 : 1\r\n        // remove section from array of sections\r\n        const section = newSections.splice(index, 1)[0]\r\n        // add section back in at new index locations\r\n        newSections.splice(index + moveAmount, 0, section)\r\n        // set value in state and ref hooks to new array of sections\r\n        setComponents(newSections)\r\n    }\r\n\r\n    const handleSectionDelete = index => {\r\n        // make copy of current state and remove section\r\n        const newSections = [...componentsRef.current]\r\n        newSections.splice(index, 1)\r\n\r\n        // update hooks with new array\r\n        setComponents(newSections)\r\n    }\r\n\r\n    const handleTextInputChange = (event) => {\r\n        // get value and name of input field and index of section in state\r\n        const name = event.target.getAttribute('data-name')\r\n        const text = event.target.innerText\r\n        const index = event.target.getAttribute('data-index')\r\n        \r\n        // create new array to with updated value of input field\r\n        const updatedArr = [...componentsRef.current]\r\n        updatedArr[index][name] = text\r\n\r\n        // only update ref since value doesn't change rendered components\r\n        componentsRef.current = updatedArr\r\n    }\r\n\r\n    const handleImageChange = (event) => {\r\n\r\n    }\r\n\r\n    const previewSite = () => {\r\n\r\n    }\r\n\r\n    const publishSite = () => {\r\n        // if blog post is new, send data to server to create a new instance in the db\r\n        if (props.isNewPost) {\r\n            // send post data to server\r\n            API.createBlogPost({ creatorId: userId, postSections: componentsRef.current })\r\n        } else {\r\n            // else post is being updated so send updated data to server\r\n            API.updateBlogPost(postId, componentsRef.current)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <CreatorToolBox\r\n                addSection={addSection}\r\n                addImage={addImage}\r\n                previewSite={previewSite}\r\n                publish={publishSite}\r\n            />\r\n            <div className='content-responsive'>\r\n                {components.map((section, index) => {\r\n                    switch (section.sectionType) {\r\n                        case 'title':\r\n                            return <BlogPostTitle \r\n                                title={section.title}\r\n                                subtitle={section.subtitle}\r\n                                index={index}\r\n                                handleTextInputChange={handleTextInputChange}\r\n                                handleSectionMove={handleSectionMove}\r\n                                handleSectionDelete={handleSectionDelete}\r\n                                />\r\n                        case 'subSection':\r\n                            return <BlogPostSection\r\n                                heading={section.heading}\r\n                                text={section.text}\r\n                                index={index}\r\n                                handleTextInputChange={handleTextInputChange}\r\n                                handleSectionMove={handleSectionMove}\r\n                                handleSectionDelete={handleSectionDelete}\r\n                            />\r\n                        case 'image':\r\n                            return <BlogPostImage\r\n                                url={section.url}\r\n                                alt={section.alt}\r\n                                index={index}\r\n                                handleSectionMove={handleSectionMove}\r\n                                handleSectionDelete={handleSectionDelete}\r\n                            />\r\n                    }\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","D:\\code\\personal-projects\\blog-cms\\src\\components\\BlogPostSection\\index.js",[],"D:\\code\\personal-projects\\blog-cms\\src\\pages\\BlogPost\\index.js",[],"D:\\code\\personal-projects\\blog-cms\\src\\components\\BlogPostImage\\index.js",[],"D:\\code\\personal-projects\\blog-cms\\src\\components\\BlogPostTitle\\index.js",[],"D:\\code\\personal-projects\\blog-cms\\src\\components\\PostCreationComponents\\CreatorToolBox\\index.js",[],"D:\\code\\personal-projects\\blog-cms\\src\\components\\PostCreationComponents\\BlogPostTitle\\index.js",[],"D:\\code\\personal-projects\\blog-cms\\src\\components\\PostCreationComponents\\BlogPostImage\\index.js",[],"D:\\code\\personal-projects\\blog-cms\\src\\components\\PostCreationComponents\\BlogPostSection\\index.js",[],"D:\\code\\personal-projects\\blog-cms\\src\\components\\PostCreationComponents\\SectionOptions\\index.js",[],["70","71"],"D:\\code\\personal-projects\\blog-cms\\src\\utils\\API.js",["72"],"import axios from 'axios'\r\n\r\nexport default {\r\n    getBlogPost: function(id) {\r\n        return axios.get('http://localhost:8000/api/post/' + id)\r\n    },\r\n    createBlogPost: function(postObj) {\r\n        return axios.post('http://localhost:8000/api/post/create', postObj)\r\n    },\r\n    updateBlogPost: function(id, postObj) {\r\n        return axios.put('http://localhost:8000/api/post/update/' + id, postObj)\r\n    }\r\n}",{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":1,"column":8,"nodeType":"79","messageId":"80","endLine":1,"endColumn":12},{"ruleId":"81","severity":1,"message":"82","line":36,"column":8,"nodeType":"83","endLine":36,"endColumn":10,"suggestions":"84"},{"ruleId":"77","severity":1,"message":"85","line":96,"column":11,"nodeType":"79","messageId":"80","endLine":96,"endColumn":28},{"ruleId":"86","severity":1,"message":"87","line":124,"column":50,"nodeType":"88","messageId":"89","endLine":124,"endColumn":52},{"ruleId":"90","severity":1,"message":"91","line":125,"column":21,"nodeType":"92","messageId":"93","endLine":152,"endColumn":22},{"ruleId":"73","replacedBy":"94"},{"ruleId":"75","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":3,"column":1,"nodeType":"98","endLine":13,"endColumn":2},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'postId' and 'props.isNewPost'. Either include them or remove the dependency array.","ArrayExpression",["101"],"'handleImageChange' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["99"],["100"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"102","fix":"103"},"Update the dependencies array to be: [postId, props.isNewPost]",{"range":"104","text":"105"},[1451,1453],"[postId, props.isNewPost]"]